{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"2NAiCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCOhBG,EAXK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IACxB,OACI,yBAAKC,UAAU,0CACX,yBACIC,IAAKF,EAAKG,IAAMJ,IAEpB,2BAAKA,K,uBCTJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAaZY,GAbY,4CAAH,sDC6BLM,EAzBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GAEFH,EAAS,CACDV,KAAMa,EACNL,SAAS,SAI1B,IAEIC,EDdqBK,CAAapB,GAA7BW,EAFkB,EAEvBL,KAAYQ,EAFW,EAEXA,QAInB,OADAO,QAAQC,IAAI,CAACR,YAET,oCACA,wBAAIlB,UAAU,qCAAqCI,GAElDc,GAAW,uBAAGlB,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAGHe,EAAOH,KAAI,SAACC,GACZ,OAEI,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBc,IAAKd,EAAIC,YEWxCc,EA7BM,WAAM,MAEa5C,mBAAS,CAAC,aAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAWvB,OAFC0C,QAAQC,IAAIG,GAGT,oCACI,4CACA,kBAAC,EAAD,CAAa9C,cAAeA,IAC5B,6BAEA,4BAGO8C,EAAWjB,KAAI,SAACkB,GAAD,OACf,kBAAC,EAAD,CAAS1B,SAAU0B,EAAWH,IAAKG,UCnBtDC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4e8fc8f8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nconst AddCategory = ({setCategories}) => {\r\n   \r\n    const [inputValue, setInputValue] = useState('') //si se deja () es undefine\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubMit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(categorias=>[inputValue,...categorias]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubMit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport '../index.css';\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img\r\n                src={url} alt={ title }\r\n            />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs = async (category) => {\r\n    //encodeURI nos ayuda a remplazar los espacios por caracteres aceptados en la url\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=d0PmO2HJ6rNB07BoVztioBy0OeJHxLfb`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    //? pregunta si vienen las imagenes para utilizarla\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;    \r\n}","import React from 'react'\r\nimport GifGridItem from './GifGridItem';\r\nimport '../index.css';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nconst GifGrid = ({ category }) => {\r\n    // //Utilizando useEffect se ejecuta cuando el componente es renderizado por primera vz esto si no tiene dependencias\r\n    const {data:images,loading}=useFetchGifs(category);\r\n\r\n\r\n    console.log({loading});\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    //en map es posible utilizar desestructuración\r\n                    images.map((img)=>{\r\n                    return (\r\n                        //al utilizar {..img} estamos enviando el props img desestructurado\r\n                        <GifGridItem {...img} key={img.id}/>\r\n                    )})\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n            })\r\n    }, []);\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n    // const categories=['One Puch','Samurai X','Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Puch']);\r\n\r\n    // const handleAdd=()=>{\r\n    //     // setCategories([...categories,'Nueva Categoria']); //... se llama operador spread  o operador de propagación\r\n    //     // setCategories(['Nueva Categoria',...categories]); \r\n    //     setCategories(cats=>[...cats,'Nueva Forma']);\r\n    // }\r\n     console.log(categories);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n        \r\n            <ol>\r\n               {\r\n                   //En el key de los items no es recomendable utilizar los indices ya que es muy volatil\r\n                   categories.map((categoria)=>(\r\n                   <GifGrid category={categoria} key={categoria}/>\r\n                   ))\r\n               }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}